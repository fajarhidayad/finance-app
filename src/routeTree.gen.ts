/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/_dashboard'
import { Route as AuthImport } from './routes/_auth'
import { Route as DashboardTransactionsImport } from './routes/_dashboard/transactions'
import { Route as DashboardRecurringBillsImport } from './routes/_dashboard/recurring-bills'
import { Route as DashboardPotsImport } from './routes/_dashboard/pots'
import { Route as DashboardOverviewImport } from './routes/_dashboard/overview'
import { Route as DashboardBudgetsImport } from './routes/_dashboard/budgets'
import { Route as AuthRegisterImport } from './routes/_auth/register'
import { Route as AuthLoginImport } from './routes/_auth/login'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const DashboardTransactionsRoute = DashboardTransactionsImport.update({
  id: '/transactions',
  path: '/transactions',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardRecurringBillsRoute = DashboardRecurringBillsImport.update({
  id: '/recurring-bills',
  path: '/recurring-bills',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardPotsRoute = DashboardPotsImport.update({
  id: '/pots',
  path: '/pots',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardOverviewRoute = DashboardOverviewImport.update({
  id: '/overview',
  path: '/overview',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardBudgetsRoute = DashboardBudgetsImport.update({
  id: '/budgets',
  path: '/budgets',
  getParentRoute: () => DashboardRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof AuthImport
    }
    '/_dashboard/budgets': {
      id: '/_dashboard/budgets'
      path: '/budgets'
      fullPath: '/budgets'
      preLoaderRoute: typeof DashboardBudgetsImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/overview': {
      id: '/_dashboard/overview'
      path: '/overview'
      fullPath: '/overview'
      preLoaderRoute: typeof DashboardOverviewImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/pots': {
      id: '/_dashboard/pots'
      path: '/pots'
      fullPath: '/pots'
      preLoaderRoute: typeof DashboardPotsImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/recurring-bills': {
      id: '/_dashboard/recurring-bills'
      path: '/recurring-bills'
      fullPath: '/recurring-bills'
      preLoaderRoute: typeof DashboardRecurringBillsImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/transactions': {
      id: '/_dashboard/transactions'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof DashboardTransactionsImport
      parentRoute: typeof DashboardImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface DashboardRouteChildren {
  DashboardBudgetsRoute: typeof DashboardBudgetsRoute
  DashboardOverviewRoute: typeof DashboardOverviewRoute
  DashboardPotsRoute: typeof DashboardPotsRoute
  DashboardRecurringBillsRoute: typeof DashboardRecurringBillsRoute
  DashboardTransactionsRoute: typeof DashboardTransactionsRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardBudgetsRoute: DashboardBudgetsRoute,
  DashboardOverviewRoute: DashboardOverviewRoute,
  DashboardPotsRoute: DashboardPotsRoute,
  DashboardRecurringBillsRoute: DashboardRecurringBillsRoute,
  DashboardTransactionsRoute: DashboardTransactionsRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '': typeof DashboardRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/budgets': typeof DashboardBudgetsRoute
  '/overview': typeof DashboardOverviewRoute
  '/pots': typeof DashboardPotsRoute
  '/recurring-bills': typeof DashboardRecurringBillsRoute
  '/transactions': typeof DashboardTransactionsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '': typeof DashboardRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/budgets': typeof DashboardBudgetsRoute
  '/overview': typeof DashboardOverviewRoute
  '/pots': typeof DashboardPotsRoute
  '/recurring-bills': typeof DashboardRecurringBillsRoute
  '/transactions': typeof DashboardTransactionsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_dashboard': typeof DashboardRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/register': typeof AuthRegisterRoute
  '/_dashboard/budgets': typeof DashboardBudgetsRoute
  '/_dashboard/overview': typeof DashboardOverviewRoute
  '/_dashboard/pots': typeof DashboardPotsRoute
  '/_dashboard/recurring-bills': typeof DashboardRecurringBillsRoute
  '/_dashboard/transactions': typeof DashboardTransactionsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/register'
    | '/budgets'
    | '/overview'
    | '/pots'
    | '/recurring-bills'
    | '/transactions'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/register'
    | '/budgets'
    | '/overview'
    | '/pots'
    | '/recurring-bills'
    | '/transactions'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_dashboard'
    | '/_auth/login'
    | '/_auth/register'
    | '/_dashboard/budgets'
    | '/_dashboard/overview'
    | '/_dashboard/pots'
    | '/_dashboard/recurring-bills'
    | '/_dashboard/transactions'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AuthRoute: typeof AuthRouteWithChildren
  DashboardRoute: typeof DashboardRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AuthRoute: AuthRouteWithChildren,
  DashboardRoute: DashboardRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/_dashboard"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/login",
        "/_auth/register"
      ]
    },
    "/_dashboard": {
      "filePath": "_dashboard.tsx",
      "children": [
        "/_dashboard/budgets",
        "/_dashboard/overview",
        "/_dashboard/pots",
        "/_dashboard/recurring-bills",
        "/_dashboard/transactions"
      ]
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx",
      "parent": "/_auth"
    },
    "/_auth/register": {
      "filePath": "_auth/register.tsx",
      "parent": "/_auth"
    },
    "/_dashboard/budgets": {
      "filePath": "_dashboard/budgets.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/overview": {
      "filePath": "_dashboard/overview.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/pots": {
      "filePath": "_dashboard/pots.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/recurring-bills": {
      "filePath": "_dashboard/recurring-bills.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/transactions": {
      "filePath": "_dashboard/transactions.tsx",
      "parent": "/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
